name: PR Quality Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check PR title format
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            test
            chore
            ci
          requireScope: false
          
      - name: Run linting
        run: npm run lint
        
      - name: Run type checking
        run: npm run type-check
        
      - name: Run unit tests
        run: npm run test:unit -- --coverage
        env:
          CI: true
          
      - name: Check test coverage
        run: |
          COVERAGE=$(npm run test:unit -- --coverage --silent | grep "All files" | awk '{print $10}' | sed 's/%//')
          if [ "$COVERAGE" -lt "80" ]; then
            echo "❌ Test coverage is below 80%: $COVERAGE%"
            exit 1
          else
            echo "✅ Test coverage is acceptable: $COVERAGE%"
          fi
          
      - name: Check for TODO/FIXME comments
        run: |
          TODO_COUNT=$(grep -r "TODO\|FIXME" src/ --exclude-dir=node_modules --exclude-dir=.next || true | wc -l)
          if [ "$TODO_COUNT" -gt "5" ]; then
            echo "⚠️ Found $TODO_COUNT TODO/FIXME comments. Consider addressing them."
            grep -r "TODO\|FIXME" src/ --exclude-dir=node_modules --exclude-dir=.next || true
          fi
          
      - name: Check bundle size
        run: |
          npm run build
          BUNDLE_SIZE=$(du -sh .next/static | cut -f1)
          echo "📦 Bundle size: $BUNDLE_SIZE"
          
      - name: Comment PR with results
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('## PR Quality Check Results')
            );
            
            const body = `## PR Quality Check Results
            
            ✅ Linting: Passed
            ✅ Type Checking: Passed
            ✅ Unit Tests: Passed
            ✅ Coverage: Above 80%
            
            This PR is ready for review!`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
